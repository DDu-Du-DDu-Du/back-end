name: Java CI with Gradle and MySQL

on:
  pull_request:
    branches:
      - main

permissions:
  contents: read
  checks: write
  pull-requests: write

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Repository Checkout
        uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: 17
          distribution: 'corretto'

      - name: Run Test DB Docker
        uses: samin/mysql-action@v1.3
        with:
          mysql database: ${{ secrets.TEST_DB }}
          mysql user: ${{ secrets.TEST_DB_USER }}
          mysql password: ${{ secrets.TEST_DB_PASSWORD }}

      - name: Configure application.yaml under test directory
        uses: microsoft/variable-substitution@v1
        with:
          files: ./src/test/resources/application.yaml
        env:
          spring.datasource.url: jdbc:mysql://localhost:3306/${{ secrets.TEST_DB }}
          spring.datasource.username: ${{ secrets.TEST_DB_USER }}
          spring.datasource.password: ${{ secrets.TEST_DB_PASSWORD }}

      - name: Cache Gradle
        uses: actions/cache@v3
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Grant permission to run gradlew
        run: chmod +x gradlew

      - name: Build Gradle
        run: ./gradlew build

      - name: Flush Jacoco test report on the pull request
        uses: madrapps/jacoco-report@v1.5
        with:
          title: üìä Jacoco Test Coverage
          paths: ${{ github.workspace }}/**/build/jacocoReports/jacoco.xml
          token: ${{ secrets.GITHUB_TOKEN }}
          min-coverage-overall: 60
          min-coverage-changed-files: 60
          update-comment: true

      - name: Flush Checkstyle report on the status checks
        uses: lcollins/checkstyle-github-action@v2.0.0
        with:
          path: '**/build/reports/checkstyle/**.xml'
          title: üìù Checkstyle report

      - name: Send a slack notification
        id: slack
        uses: slackapi/slack-github-action@v1.24.0
        with:
          payload: |
            {
              "text": "Sorry for inconvenience. Currently testing CI",
              "blocks": [
                {
                  "type": "section",
                  "text": {
                    "type": "mrkdwn",
                    "text": "[Update](${{ github.event.pull_request.html_url || github.event.head_commit.url }})\Check Result: ${{ job.status }}"
                  }
                }
              ]
            }
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
          SLACK_WEBHOOK_TYPE: INCOMING_WEBHOOK
